"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import messages.argus.adc_pb2
import messages.argus.pressure.pressure_channel_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class PressureReading(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCAL_SESSION_FIELD_NUMBER: builtins.int
    ADC_DEVICE_FIELD_NUMBER: builtins.int
    PRESSURE_CHANNEL_FIELD_NUMBER: builtins.int
    RECORDED_AT_FIELD_NUMBER: builtins.int
    VOLTAGE_FIELD_NUMBER: builtins.int
    PRESSURE_FIELD_NUMBER: builtins.int
    TEMPERATURE_FIELD_NUMBER: builtins.int
    local_session: builtins.int
    """Local session from the device that took the reading"""
    adc_device: argus.adc_pb2.AdcDevice.ValueType
    """ADC device from which the reading was taken"""
    pressure_channel: argus.pressure.pressure_channel_pb2.PressureChannel.ValueType
    """Identifier for the pressure within the ADC device"""
    recorded_at: builtins.int
    """Milliseconds since the board's epoch when the reading was recorded"""
    voltage: builtins.float
    """Voltage difference measured at the pressure sensor wheatstone bridge in millivolts"""
    pressure: builtins.float
    """Pressure reading in Pascals"""
    temperature: builtins.float
    """Temperature of the manifold from the NTC resistor at the time of the recording in degrees Celsius"""
    def __init__(
        self,
        *,
        local_session: builtins.int | None = ...,
        adc_device: argus.adc_pb2.AdcDevice.ValueType = ...,
        pressure_channel: argus.pressure.pressure_channel_pb2.PressureChannel.ValueType = ...,
        recorded_at: builtins.int = ...,
        voltage: builtins.float = ...,
        pressure: builtins.float = ...,
        temperature: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_local_session", b"_local_session", "local_session", b"local_session"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_local_session", b"_local_session", "adc_device", b"adc_device", "local_session", b"local_session", "pressure", b"pressure", "pressure_channel", b"pressure_channel", "recorded_at", b"recorded_at", "temperature", b"temperature", "voltage", b"voltage"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_local_session", b"_local_session"]) -> typing.Literal["local_session"] | None: ...

global___PressureReading = PressureReading
